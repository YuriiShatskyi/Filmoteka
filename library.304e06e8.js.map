{"mappings":"iiBACAA,EAAA,S,WCDA,IAAAC,EAAAD,EAAA,S,aAuDA,SAASE,IACLC,EAAAC,KAAKC,SAASC,UAAUC,OAAO,UAC/BJ,EAAAC,KAAKI,WAAWF,UAAUG,IAAI,UAC9B,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACtD,GAAsB,OAAlBJ,EAAJ,CAMA,IAEIK,EAFkBC,EAAAf,EAAA,CAAG,IAAIgB,IAAIP,EAAcQ,KAAI,SAACC,G,MAAS,CAACA,EAAS,GAAGA,E,KAAQC,UAEnDF,KAAI,SAAAG,GACnC,IAAMC,EAAcD,EAAME,OAG1B,GAAID,EAAYE,OAAS,EAAG,CAExBF,EAAY,GAAGG,KADD,QAEdH,EAAYE,OAAS,C,CAI7B,IAAkBE,EAMV,MAAO,YAGXC,OAFKN,EAAMO,GAAG,kHAMVD,OAJJN,EAAMQ,YACP,0GAMMF,OAHDN,EAAMS,eAAe,kDAGmBH,QAhB9BD,EAgBCJ,EAfjBI,EAAYK,QAAO,SAACC,EAAWC,GAG7B,OAFAD,EAAUE,KAAKD,EAAMR,MAEdO,C,GACN,KAW2BG,KAAK,MAAM,OAAwCR,OAAnCN,EAAMe,aAAaC,UAAU,EAAG,GAAG,qC,IAO5EF,KAAK,IACRhC,EAAAC,KAAKkC,QAAQC,UAAYxB,C,KA3CzB,CAGIZ,EAAAC,KAAKkC,QAAQC,UADQ,4B,EA3D7BpC,EAAAC,KAAKI,WAAWgC,iBAAiB,QAAStC,GAC1CC,EAAAC,KAAKC,SAASmC,iBAAiB,SAE/B,WACIrC,EAAAC,KAAKI,WAAWF,UAAUC,OAAO,UACjCJ,EAAAC,KAAKC,SAASC,UAAUG,IAAI,UAC5B,IAAMgC,EAAe9B,KAAKC,MAAMC,aAAaC,QAAQ,gBACrD,GAAqB,OAAjB2B,EAAuB,CAIvB,YADAtC,EAAAC,KAAKkC,QAAQC,UADQ,6B,CAIzB,IAEIxB,EAFkBC,EAAAf,EAAA,CAAG,IAAIgB,IAAIwB,EAAavB,KAAI,SAACC,G,MAAS,CAACA,EAAS,GAAGA,E,KAAQC,UAElDF,KAAI,SAAAG,GACnC,IAAMqB,EAAcrB,EAAME,OAE1B,GAAImB,EAAYlB,OAAS,EAAG,CAExBkB,EAAY,GAAGjB,KADD,QAEdiB,EAAYlB,OAAS,C,CAG7B,IAAkBE,EAQV,MAAO,YAGXC,OAFKN,EAAMO,GAAG,kHAMVD,OAJJN,EAAMQ,YACP,0GAMMF,OAHDN,EAAMS,eAAe,kDAGmBH,QAlB9BD,EAkBCgB,EAjBjBhB,EAAYK,QAAO,SAACC,EAAWC,GAG7B,OAFAD,EAAUE,KAAKD,EAAMR,MAEdO,C,GACN,KAa2BG,KAAK,MAAM,OAAwCR,OAAnCN,EAAMe,aAAaC,UAAU,EAAG,GAAG,qC,IAO5EF,KAAK,IACRhC,EAAAC,KAAKkC,QAAQC,UAAYxB,C,IAhD7Bb,I","sources":["src/library.js","src/js/queued.js"],"sourcesContent":["\nimport './js/pagination';\nimport './js/team-modal';\nimport './js/queued';\n\nimport \"./js/modal\";\nimport './js/auth';\n\n","import { refs } from \"./refs\";\n\nrefs.watchedBtn.addEventListener('click', renderWatched);\nrefs.queueBtn.addEventListener('click', renderQueued);\nrenderWatched();\nfunction renderQueued() {\n    refs.watchedBtn.classList.remove(\"active\");\n    refs.queueBtn.classList.add(\"active\");\n    const queuedMovies = JSON.parse(localStorage.getItem('queue-films'));\n    if (queuedMovies === null) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(queuedMovies.map((item) => [item[\"id\"], item])).values()];\n    \n  const newMarkup = uniqueObjArray.map(movie => {\n    const totalGenres = movie.genres;\n\n    if (totalGenres.length > 3) {\n        const other = 'Other';\n        totalGenres[2].name = other;\n        totalGenres.length = 3;\n    };\n    \nconst getGenres = totalGenres =>\n  totalGenres.reduce((allGenres, genre) => {\n    allGenres.push(genre.name);\n\n    return allGenres;\n  }, []);\n \n   \n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    // ${getGenres(totalGenres).join(', ')} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\nfunction renderWatched() {\n    refs.queueBtn.classList.remove(\"active\");\n    refs.watchedBtn.classList.add(\"active\");\n    const watchedMovies = JSON.parse(localStorage.getItem('watched-films'))\n    if (watchedMovies === null) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(watchedMovies.map((item) => [item[\"id\"], item])).values()];    \n    \n  const newMarkup = uniqueObjArray.map(movie => {\n    const totalGenres = movie.genres;\n    \n\n    if (totalGenres.length > 3) {\n        const other = 'Other';\n        totalGenres[2].name = other;\n        totalGenres.length = 3;\n    };\n    \n    \nconst getGenres = totalGenres =>\n  totalGenres.reduce((allGenres, genre) => {\n    allGenres.push(genre.name);\n   \n    return allGenres;\n  }, []);\n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    // ${getGenres(totalGenres).join(', ')} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\n"],"names":["parcelRequire","$8nrFW","$58acdbc916049461$var$renderWatched","$4Nugj","refs","queueBtn","classList","remove","watchedBtn","add","watchedMovies","JSON","parse","localStorage","getItem","newMarkup","$parcel$interopDefault","Map","map","item","values","movie","totalGenres2","genres","length","name","totalGenres","concat","id","poster_path","original_title","reduce","allGenres","genre","push","join","release_date","substring","gallery","innerHTML","addEventListener","queuedMovies","totalGenres1"],"version":3,"file":"library.304e06e8.js.map"}