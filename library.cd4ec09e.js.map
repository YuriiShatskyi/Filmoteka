{"mappings":"oeACAA,EAAA,S,WCDA,IAAAC,EAAAD,EAAA,SAuDA,SAASE,IACLD,EAAAE,KAAKC,SAASC,UAAUC,OAAO,UAC/BL,EAAAE,KAAKI,WAAWF,UAAUG,IAAI,UAC9B,MAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACtD,GAAsB,OAAlBJ,EAAwB,CAExB,MAAMK,EAAc,6BAEpB,YADAb,EAAAE,KAAKY,QAAQC,UAAYF,E,CAK/B,MAAMG,EAFiB,IAAI,IAAIC,IAAIT,EAAcU,KAAKC,GAAS,CAACA,EAAS,GAAGA,MAAQC,UAEnDF,KAAIG,IACnC,MAAMC,EAAcD,EAAME,OAG1B,GAAID,EAAYE,OAAS,EAAG,CACxB,MAAMC,EAAQ,QACdH,EAAY,GAAGI,KAAOD,EACtBH,EAAYE,OAAS,C,CAUrB,MAAO,YACNH,EAAMM,mHAEXN,EAAMO,oHAIFP,EAAMQ,gEAbIC,EAgBCR,EAfjBQ,EAAYC,QAAO,CAACC,EAAWC,KAC7BD,EAAUE,KAAKD,EAAMP,MAEdM,IACN,KAW2BG,KAAK,WAAWd,EAAMe,aAAaC,UAAU,EAAG,uCAhB9D,IAAAP,CAqBjB,IAEMK,KAAK,IACRnC,EAAAE,KAAKY,QAAQC,UAAYC,C,CApG7BhB,EAAAE,KAAKI,WAAWgC,iBAAiB,QAASrC,GAC1CD,EAAAE,KAAKC,SAASmC,iBAAiB,SAE/B,WACItC,EAAAE,KAAKI,WAAWF,UAAUC,OAAO,UACjCL,EAAAE,KAAKC,SAASC,UAAUG,IAAI,UAC5B,MAAMgC,EAAe9B,KAAKC,MAAMC,aAAaC,QAAQ,gBACrD,GAAqB,OAAjB2B,EAAuB,CAEvB,MAAM1B,EAAc,6BAEpB,YADAb,EAAAE,KAAKY,QAAQC,UAAYF,E,CAK/B,MAAMG,EAFiB,IAAI,IAAIC,IAAIsB,EAAarB,KAAKC,GAAS,CAACA,EAAS,GAAGA,MAAQC,UAElDF,KAAIG,IACnC,MAAMmB,EAAcnB,EAAME,OAE1B,GAAIiB,EAAYhB,OAAS,EAAG,CACxB,MAAMC,EAAQ,QACde,EAAY,GAAGd,KAAOD,EACtBe,EAAYhB,OAAS,C,CAWrB,MAAO,YACNH,EAAMM,mHAEXN,EAAMO,oHAIFP,EAAMQ,gEAfIC,EAkBCU,EAjBjBV,EAAYC,QAAO,CAACC,EAAWC,KAC7BD,EAAUE,KAAKD,EAAMP,MAEdM,IACN,KAa2BG,KAAK,WAAWd,EAAMe,aAAaC,UAAU,EAAG,uCAlB9D,IAAAP,CAuBjB,IAEMK,KAAK,IACRnC,EAAAE,KAAKY,QAAQC,UAAYC,C,IAhD7Bf,I","sources":["src/library.js","src/js/queued.js"],"sourcesContent":["\nimport './js/pagination';\nimport './js/team-modal';\nimport './js/queued';\n\nimport \"./js/modal\";\nimport './js/auth';\n\n","import { refs } from \"./refs\";\n\nrefs.watchedBtn.addEventListener('click', renderWatched);\nrefs.queueBtn.addEventListener('click', renderQueued);\nrenderWatched();\nfunction renderQueued() {\n    refs.watchedBtn.classList.remove(\"active\");\n    refs.queueBtn.classList.add(\"active\");\n    const queuedMovies = JSON.parse(localStorage.getItem('queue-films'));\n    if (queuedMovies === null) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(queuedMovies.map((item) => [item[\"id\"], item])).values()];\n    \n  const newMarkup = uniqueObjArray.map(movie => {\n    const totalGenres = movie.genres;\n\n    if (totalGenres.length > 3) {\n        const other = 'Other';\n        totalGenres[2].name = other;\n        totalGenres.length = 3;\n    };\n    \nconst getGenres = totalGenres =>\n  totalGenres.reduce((allGenres, genre) => {\n    allGenres.push(genre.name);\n\n    return allGenres;\n  }, []);\n \n   \n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    // ${getGenres(totalGenres).join(', ')} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\nfunction renderWatched() {\n    refs.queueBtn.classList.remove(\"active\");\n    refs.watchedBtn.classList.add(\"active\");\n    const watchedMovies = JSON.parse(localStorage.getItem('watched-films'))\n    if (watchedMovies === null) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(watchedMovies.map((item) => [item[\"id\"], item])).values()];    \n    \n  const newMarkup = uniqueObjArray.map(movie => {\n    const totalGenres = movie.genres;\n    \n\n    if (totalGenres.length > 3) {\n        const other = 'Other';\n        totalGenres[2].name = other;\n        totalGenres.length = 3;\n    };\n    \n    \nconst getGenres = totalGenres =>\n  totalGenres.reduce((allGenres, genre) => {\n    allGenres.push(genre.name);\n   \n    return allGenres;\n  }, []);\n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    // ${getGenres(totalGenres).join(', ')} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\n"],"names":["parcelRequire","$krGWQ","$b90371e4116d8894$var$renderWatched","refs","queueBtn","classList","remove","watchedBtn","add","watchedMovies","JSON","parse","localStorage","getItem","placeholder","gallery","innerHTML","newMarkup","Map","map","item","values","movie","totalGenres2","genres","length","other","name","id","poster_path","original_title","totalGenres","reduce","allGenres","genre","push","join","release_date","substring","addEventListener","queuedMovies","totalGenres1"],"version":3,"file":"library.cd4ec09e.js.map"}