{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgDA,SAASC,IACLF,EAAAG,KAAKC,SAASC,UAAUC,OAAO,UAC/BN,EAAAG,KAAKI,WAAWF,UAAUG,IAAI,UAC9B,MAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACtD,GAAsB,OAAlBJ,EAAwB,CAExB,MAAMK,EAAc,6BAEpB,YADAd,EAAAG,KAAKY,QAAQC,UAAYF,E,CAG7B,IAAIG,EAAiB,IAAI,IAAIC,IAAIT,EAAcU,KAAKC,GAAS,CAACA,EAAS,GAAGA,MAAQC,UACpFC,QAAQC,IAAI,eAAgBN,GAE1B,MAAMO,EAAYP,EAAeE,KAAIM,GAE1B,YACNA,EAAMC,mHAEXD,EAAME,oHAIFF,EAAMG,4DAGRH,EAAMI,OAAO,GAAGC,SAASL,EAAMI,OAAO,GAAGC,SAASL,EAAMI,OAAO,GAAGC,UAAUL,EAAMM,aAAaC,UAAU,EAAG,yCAO3GC,KAAK,IACRjC,EAAAG,KAAKY,QAAQC,UAAYQ,C,CAxE7BxB,EAAAG,KAAKI,WAAW2B,iBAAiB,QAAShC,GAC1CF,EAAAG,KAAKC,SAAS8B,iBAAiB,SAE/B,WACIlC,EAAAG,KAAKI,WAAWF,UAAUC,OAAO,UACjCN,EAAAG,KAAKC,SAASC,UAAUG,IAAI,UAC5B,MAAM2B,EAAezB,KAAKC,MAAMC,aAAaC,QAAQ,gBACrD,GAAqB,OAAjBsB,EAAuB,CAEvB,MAAMrB,EAAc,6BAEpB,YADAd,EAAAG,KAAKY,QAAQC,UAAYF,E,CAG7B,IAAIG,EAAiB,IAAI,IAAIC,IAAIiB,EAAahB,KAAKC,GAAS,CAACA,EAAS,GAAGA,MAAQC,UACnFC,QAAQC,IAAI,eAAgBN,GAE1B,MAAMO,EAAYP,EAAeE,KAAIM,GAE1B,YACNA,EAAMC,mHAEXD,EAAME,oHAIFF,EAAMG,4DAGRH,EAAMI,OAAO,GAAGC,SAASL,EAAMI,OAAO,GAAGC,SAASL,EAAMI,OAAO,GAAGC,UAAUL,EAAMM,aAAaC,UAAU,EAAG,yCAO3GC,KAAK,IACRjC,EAAAG,KAAKY,QAAQC,UAAYQ,C,IAlC7BtB,I","sources":["src/js/queued.js"],"sourcesContent":["import { refs } from \"./refs\";\n\n// const refs = {\n//     watchedBtn: document.querySelector(\".wached-btn\"),\n//     queueBtn: document.querySelector(\".queue-btn\"),\n//     gallery: document.querySelector('.gallery'),\n//     openModalE: document.querySelector(\".filmsModal\"),\n// };\n  \nrefs.watchedBtn.addEventListener('click', renderWatched);\nrefs.queueBtn.addEventListener('click', renderQueued);\nrenderWatched();\nfunction renderQueued() {\n    refs.watchedBtn.classList.remove(\"active\");\n    refs.queueBtn.classList.add(\"active\");\n    const queuedMovies = JSON.parse(localStorage.getItem('queue-films'));\n    if (queuedMovies === null) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(queuedMovies.map((item) => [item[\"id\"], item])).values()];\n  console.log('queuedMovies', uniqueObjArray)\n    \n    const newMarkup = uniqueObjArray.map(movie => {\n   \n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    ${movie.genres[0].name}, ${movie.genres[1].name}, ${movie.genres[2].name} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\nfunction renderWatched() {\n    refs.queueBtn.classList.remove(\"active\");\n    refs.watchedBtn.classList.add(\"active\");\n    const watchedMovies = JSON.parse(localStorage.getItem('watched-films'))\n    if (watchedMovies === null) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(watchedMovies.map((item) => [item[\"id\"], item])).values()];\n  console.log('queuedMovies', uniqueObjArray)\n    \n    const newMarkup = uniqueObjArray.map(movie => {\n   \n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    ${movie.genres[0].name}, ${movie.genres[1].name}, ${movie.genres[2].name} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\n"],"names":["$krGWQ","parcelRequire","$b90371e4116d8894$var$renderWatched","refs","queueBtn","classList","remove","watchedBtn","add","watchedMovies","JSON","parse","localStorage","getItem","placeholder","gallery","innerHTML","uniqueObjArray","Map","map","item","values","console","log","newMarkup","movie","id","poster_path","original_title","genres","name","release_date","substring","join","addEventListener","queuedMovies"],"version":3,"file":"libraty.eac46e84.js.map"}